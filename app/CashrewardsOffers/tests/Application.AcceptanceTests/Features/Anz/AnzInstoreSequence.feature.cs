// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CashrewardsOffers.Application.AcceptanceTests.Features.Anz
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AnzInstoreSequence")]
    public partial class AnzInstoreSequenceFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "AnzInstoreSequence.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-AU"), "Features/Anz", "AnzInstoreSequence", "Ensure in-store carousel items maintain a sequence with no gaps", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("In-store items should be ordered by IsHomePageFeatured then by IsFeatured then by" +
            " IsPopular then by Name")]
        public void In_StoreItemsShouldBeOrderedByIsHomePageFeaturedThenByIsFeaturedThenByIsPopularThenByName()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("In-store items should be ordered by IsHomePageFeatured then by IsFeatured then by" +
                    " IsPopular then by Name", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                            "MerchantId",
                            "IsPopular",
                            "NetworkId",
                            "IsHomePageFeatured",
                            "IsFeatured",
                            "Name"});
                table116.AddRow(new string[] {
                            "100",
                            "true",
                            "1000053",
                            "false",
                            "false",
                            "Pizza Hut"});
                table116.AddRow(new string[] {
                            "101",
                            "true",
                            "1000053",
                            "false",
                            "false",
                            "MacDonalds"});
                table116.AddRow(new string[] {
                            "102",
                            "true",
                            "1000053",
                            "true",
                            "false",
                            "Nazimi"});
                table116.AddRow(new string[] {
                            "103",
                            "true",
                            "1000053",
                            "true",
                            "false",
                            "KFC"});
                table116.AddRow(new string[] {
                            "104",
                            "true",
                            "1000053",
                            "false",
                            "true",
                            "Red Rooster"});
                table116.AddRow(new string[] {
                            "105",
                            "true",
                            "1000053",
                            "false",
                            "true",
                            "New Shanghai"});
#line 6
 testRunner.Given("merchant data change event", ((string)(null)), table116, "Given ");
#line hidden
#line 14
 testRunner.When("I send an ANZ query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                            "Merchant.Id",
                            "Merchant.IsInstore",
                            "Merchant.InstoreRanking"});
                table117.AddRow(new string[] {
                            "100",
                            "true",
                            "6"});
                table117.AddRow(new string[] {
                            "101",
                            "true",
                            "5"});
                table117.AddRow(new string[] {
                            "102",
                            "true",
                            "2"});
                table117.AddRow(new string[] {
                            "103",
                            "true",
                            "1"});
                table117.AddRow(new string[] {
                            "104",
                            "true",
                            "4"});
                table117.AddRow(new string[] {
                            "105",
                            "true",
                            "3"});
#line 15
 testRunner.Then("I should receive ANZ items", ((string)(null)), table117, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A new in-store item should resequence all below it")]
        public void ANewIn_StoreItemShouldResequenceAllBelowIt()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A new in-store item should resequence all below it", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 25
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                            "MerchantId",
                            "IsPopular",
                            "NetworkId",
                            "IsHomePageFeatured",
                            "IsFeatured",
                            "Name"});
                table118.AddRow(new string[] {
                            "100",
                            "true",
                            "1000053",
                            "false",
                            "false",
                            "Pizza Hut"});
                table118.AddRow(new string[] {
                            "101",
                            "true",
                            "1000053",
                            "false",
                            "false",
                            "MacDonalds"});
                table118.AddRow(new string[] {
                            "102",
                            "true",
                            "1000053",
                            "true",
                            "false",
                            "Nazimi"});
                table118.AddRow(new string[] {
                            "103",
                            "true",
                            "1000053",
                            "true",
                            "false",
                            "KFC"});
                table118.AddRow(new string[] {
                            "104",
                            "true",
                            "1000053",
                            "false",
                            "true",
                            "Red Rooster"});
                table118.AddRow(new string[] {
                            "105",
                            "true",
                            "1000053",
                            "false",
                            "true",
                            "New Shanghai"});
#line 26
 testRunner.Given("merchant data change event", ((string)(null)), table118, "Given ");
#line hidden
#line 34
 testRunner.When("I send an ANZ query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                            "Merchant.Id",
                            "Merchant.IsInstore",
                            "Merchant.InstoreRanking"});
                table119.AddRow(new string[] {
                            "100",
                            "true",
                            "6"});
                table119.AddRow(new string[] {
                            "101",
                            "true",
                            "5"});
                table119.AddRow(new string[] {
                            "102",
                            "true",
                            "2"});
                table119.AddRow(new string[] {
                            "103",
                            "true",
                            "1"});
                table119.AddRow(new string[] {
                            "104",
                            "true",
                            "4"});
                table119.AddRow(new string[] {
                            "105",
                            "true",
                            "3"});
#line 35
 testRunner.Then("I should receive ANZ items", ((string)(null)), table119, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                            "MerchantId",
                            "IsPopular",
                            "NetworkId",
                            "IsHomePageFeatured",
                            "IsFeatured",
                            "Name"});
                table120.AddRow(new string[] {
                            "106",
                            "true",
                            "1000053",
                            "true",
                            "true",
                            "Sizzler"});
#line 43
 testRunner.Given("merchant data change event", ((string)(null)), table120, "Given ");
#line hidden
#line 46
 testRunner.When("I send an ANZ query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                            "Merchant.Id",
                            "Merchant.IsInstore",
                            "Merchant.InstoreRanking"});
                table121.AddRow(new string[] {
                            "100",
                            "true",
                            "7"});
                table121.AddRow(new string[] {
                            "101",
                            "true",
                            "6"});
                table121.AddRow(new string[] {
                            "102",
                            "true",
                            "3"});
                table121.AddRow(new string[] {
                            "103",
                            "true",
                            "2"});
                table121.AddRow(new string[] {
                            "104",
                            "true",
                            "5"});
                table121.AddRow(new string[] {
                            "105",
                            "true",
                            "4"});
                table121.AddRow(new string[] {
                            "106",
                            "true",
                            "1"});
#line 47
 testRunner.Then("I should receive ANZ items", ((string)(null)), table121, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
